<!doctype html>

<html>
<head>
	<title>Assignments</title>	
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<link rel="stylesheet" type="text/css" href="css/bootstrap.css">
	<link rel="stylesheet" type="text/css" href="css/simplex.min.css">

	<!-- import plugin script -->
    <script src='Chart.js/Chart.min.js'></script>
    <script src='canvasjs-1.3.0/canvasjs.min.js'></script>

    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
      <script src="https://oss.maxcdn.com/libs/respond.js/1.3.0/respond.min.js"></script>
    <![endif]--> 

     <!-- Script for stacked bar chart I think-->
 <script type="text/javascript">
  window.onload = function () {

//figure out how to get blank lines between!!!!!!

var chart2 = new CanvasJS.Chart("chartContainer2",
    {
      title:{
        text: "Overview of Course"

      },
      data:[
      {
        type: "stackedBar100",
        showInLegend: true,
        name: "Assignment(s)",
        dataPoints: [
        {y: parseInt(40 + 57 + 50 + 40), label: "Actual" },
        {y: parseInt(45 + 70 + 50 + 42), label: "Total" }
        ]
      },
       {
        type: "stackedBar100",
        showInLegend: true,
        name: "Lab(s)",
        dataPoints: [
        {y: parseInt(50 + 50 + 50 + 50), label: "Actual" },
        {y: parseInt(50 + 50 + 50 + 50), label: "Total" }
        ]
      },
      {
        type: "stackedBar100",
        showInLegend: true,
        name: "Midterm(s)",
        dataPoints: [
        {y: parseInt(70), label: "Actual" },
        {y: parseInt(100), label: "Total" }
        ]
      },
      {
        type: "stackedBar100",
        color: "white",
        dataPoints: [
        {y: parseInt(41), label: "Actual" },
        {y: 0, label: "Total" }
        ]
      }
      ]

    });

chart2.render();

//BLANK LINES NEEDEDDDDDDDDD

var chart3 = new CanvasJS.Chart("chartContainer3",
    {

      title:{
      text: "Course Grades Over Time"
      },
      axisX: {                      
        title: "Type of Grade"
    },
    axisY: {                        
        title: "Score out of 100",
        maximum: 105,
        interval: 25
    },
       data: [
      {
        type: "line",

        dataPoints: [
        { x: 1 , y: parseInt(40/45*100) , label: "Pset 1" },
        { x: 2, y: parseInt(57/70*100) , label: "Pset 2"},
        { x: 3, y: parseInt(50/50*100), label: "Pset 3" },
        { x: 4, y: parseInt(50/50*100) , label: "Lab 1"},
        { x: 5, y: parseInt(40/50*100) , label: "Lab 2"},
        { x: 6, y: parseInt(40/50*100) , label: "Lab 3"},
        { x: 7, y: parseInt(50/50*100) , label: "Lab 4"},
        { x: 8, y: parseInt(40/42*100) , label: "Pset 4"},
        { x: 9, y: parseInt(79/100*100) , label: "Midterm"}
        ]
      }
      ]
    });
    chart3.render();
}
</script>
<script type="text/javascript" src="canvasjs-1.3.0/canvasjs.min.js"></script>   

<!-- close head -->
</head>

<body>
	<div class="container">
        {{>navbar}}
        <div class="row container-fluid">
		<h1 class="col-md-8 col-xs-8">Assignments</h1>
    <div>
      <br>
      <button id="addAssignmentBtn" class="btn btn-default pull-right"><i class="glyphicon glyphicon-plus"></i> Add Assignment</button>
    </div>
  </div>

		<hr>
      
		
        <div class="panel panel-default">
          
		<table class="table">
			<th>Name</th><th>Type</th><th>Score</th><th>Out of</th>
		{{#each assignments}}
			<tr id="{{name}}">
				<td>{{name}}</td>
				<td>{{type}}</td>
				<td>{{score}}</td>
				<td>{{total}}</td>
			</tr>
		{{/each}}
	</table>
</div>
<hr>
  <div id="chartContainer2" style="height: 300px; width: 100%;">
  </div>
<hr>
  <div id="chartContainer3" style="height: 300px; width: 100%;">
  </div>
		<form id="addAssignmentForm" role="form" method="get" action="/add">
			<h3>Add an assignment</h3>
      <div class="form-group">
          <label for="Course">Name:</label>
          <select class="form-control" id="courseSelect">
            <option value="1"></option>
            {{#each courses}}
            <option value="1">{{department}}{{number}}</option>
            {{/each}}
          </select>
        </div>
        <div class="form-group">
          <label for="Type">Type:</label>
          <select class="form-control" id="typeSelect">
            <option value="1"></option>
            {{#each courses}}
            <option value="1">{{department}}{{number}}</option>
            {{/each}}
          </select>
        </div>
		    <div class="form-group">
		      <label for="name">Name:</label>
		      <input type="text" class="form-control" id="name" placeholder="Ex: RBA" name="name">
		    </div>
		    <div class="form-group">
		      <label for="score">Score:</label>
		      <input type="text" class="form-control" id="score" placeholder="Ex: 95" name="score">
		    </div>
		    <div class="form-group">
		      <label for="total">Out of:</label>
		      <input type="text" class="form-control" id="total" placeholder="Ex: 100" name="total">
		    </div>
		    <input type="submit" id="submitBtn" class="btn btn-default" value="Add"></input>
		</form>
		<hr>
	</div>


	<script src="js/jquery-1.11.0.js"></script>
	<script src="js/bootstrap.js"></script>
  <script src="js/addAssignment.js"></script>


</body>


</html>
